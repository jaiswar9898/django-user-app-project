from django.db import models
import MySQLdb as Database
from django.forms import ModelForm, Textarea
from django.db import models 
from django.contrib.auth.models import User
from django.dispatch import receiver
from django.db.models.signals import post_save
from django.db import models

# Create your models here.

from django.db import models
from django.contrib.auth.models import User

# Create your models here.
class Device(models.Model):
    
    type = models.CharField(max_length=200, blank=False)
    price = models.IntegerField()

    choices = (
        ('AVAILABLE', 'Item ready to be purchased'),
        ('SOLD', 'Item already purchased'),
        ('RESTOCKING', 'Item restocking in few days')
    )

    status = models.CharField(max_length=10, choices=choices, default='SOLD')
    issues = models.CharField(max_length=50, default="No Issues")

    class Meta:
        abstract = True

    def __str__(self):
        return 'Type: {0} Price: {1}'.format(self.type, self.price)

class Desktops(Device):
    pass

class Laptops(Device):
    pass

class Mobiles(Device):
    pass


class Desktops(models.Model):
     type = models.CharField(max_length=200, blank=False)
     price = models.IntegerField()

     choices = (
         ('SOLD', 'Item already purchased'),
         ('AVAILABLE', 'Item ready to be purchased'),
         ('RESTOCKING', 'Item restocking in few days')
     )

     status = models.CharField(max_length=10, choices=choices, default='SOLD')
     issues = models.CharField(max_length=50, default="No Issues")

     def __str__(self):
         return 'Type: {0} Price: {1}'.format(self.type, self.price)


class Laptops(models.Model):
     type = models.CharField(max_length=200, blank=False)
     price = models.IntegerField()

     choices = (
        ('SOLD', 'Item already purchased'),
        ('AVAILABLE', 'Item ready to be purchased'),
        ('RESTOCKING', 'Item restocking in few days')
     )

     status = models.CharField(max_length=10, choices=choices, default='SOLD')
     issues = models.CharField(max_length=50, default="No Issues")

     def __str__(self):
         return 'Type: {0} Price: {1}'.format(self.type, self.price)


class Mobiles(models.Model):
     type = models.CharField(max_length=200, blank=False)
     price = models.IntegerField()

     choices = (
         ('SOLD', 'Item already purchased'),
         ('AVAILABLE', 'Item ready to be purchased'),
         ('RESTOCKING', 'Item restocking in few days')
     )

     status = models.CharField(max_length=10, choices=choices, default='SOLD')
     issues = models.CharField(max_length=50, default="No Issues")

     def __str__(self):
         return 'Type: {0} Price: {1}'.format(self.type, self.price)